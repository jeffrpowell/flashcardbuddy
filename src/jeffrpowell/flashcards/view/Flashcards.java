package jeffrpowell.flashcards.view;

import java.awt.CardLayout;
import java.awt.event.ItemEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.Collections;
import javax.swing.*;
import jeffrpowell.flashcards.controller.Controller;
import jeffrpowell.flashcards.model.Deck;
import jeffrpowell.flashcards.model.FlashCard;

public class Flashcards extends javax.swing.JFrame {

    private final Controller controller;
    private CardLayout cardLayout;
    private transient final WindowAdapter persistOnClose;
    private Deck deckCache;
    private int runningIndex;

    /**
     * Creates new form Flashcards
     */
    public Flashcards() {
        this.controller = new Controller(this);
        this.persistOnClose = new PersistOnClose();
        initComponents();
        manualInit();
    }

    private void manualInit() {
        JPanel buttonBar = new ButtonBar(controller);
        getContentPane().add(buttonBar, java.awt.BorderLayout.NORTH);
        cardLayout = (CardLayout) cardPanel.getLayout();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        cardPanel = new javax.swing.JPanel();
        IntroPanel = new javax.swing.JPanel();
        AddDeckPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        deckNameTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        flashcardAnswerTxtArea = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        flashcardPromptTxtArea = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        addFlashcardBtn = new javax.swing.JButton();
        saveNewDeckBtn = new javax.swing.JButton();
        EditDeckPanel = new javax.swing.JPanel();
        editDeckSelect = new javax.swing.JComboBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        editPromptTxtArea = new javax.swing.JTextArea();
        jScrollPane6 = new javax.swing.JScrollPane();
        editAnswerTxtArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        editPreviousBtn = new javax.swing.JButton();
        filler4 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        editNextBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        RunDeckPanel = new javax.swing.JPanel();
        deckSelect = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        runPromptTxtArea = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        runAnswerTxtArea = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        previousBtn = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        shuffleBtn = new javax.swing.JButton();
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        revealButton = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 0));
        nextBtn = new javax.swing.JButton();
        feedbackLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Flashcard Buddy");
        setMinimumSize(new java.awt.Dimension(700, 500));
        setPreferredSize(new java.awt.Dimension(700, 500));

        cardPanel.setLayout(new java.awt.CardLayout());
        cardPanel.add(IntroPanel, "introPanel");

        AddDeckPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setText("Deck Name");
        AddDeckPanel.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 14, -1, -1));
        AddDeckPanel.add(deckNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 11, 170, -1));

        jScrollPane1.setHorizontalScrollBar(null);

        flashcardAnswerTxtArea.setColumns(20);
        flashcardAnswerTxtArea.setLineWrap(true);
        flashcardAnswerTxtArea.setRows(7);
        flashcardAnswerTxtArea.setTabSize(4);
        flashcardAnswerTxtArea.setWrapStyleWord(true);
        jScrollPane1.setViewportView(flashcardAnswerTxtArea);

        AddDeckPanel.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 192, 453, -1));

        jLabel6.setText("Flashcard Prompt");
        AddDeckPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 42, -1, -1));

        jScrollPane2.setHorizontalScrollBar(null);

        flashcardPromptTxtArea.setColumns(20);
        flashcardPromptTxtArea.setLineWrap(true);
        flashcardPromptTxtArea.setRows(7);
        flashcardPromptTxtArea.setTabSize(4);
        flashcardPromptTxtArea.setWrapStyleWord(true);
        jScrollPane2.setViewportView(flashcardPromptTxtArea);

        AddDeckPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 42, 453, -1));

        jLabel7.setText("Flashcard Answer");
        AddDeckPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 192, -1, -1));

        addFlashcardBtn.setText("Add New Flashcard");
        addFlashcardBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                addFlashcardBtnActionPerformed(evt);
            }
        });
        AddDeckPanel.add(addFlashcardBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 335, 184, -1));

        saveNewDeckBtn.setText("Save New Deck");
        saveNewDeckBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                saveNewDeckBtnActionPerformed(evt);
            }
        });
        AddDeckPanel.add(saveNewDeckBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(295, 335, 201, -1));

        cardPanel.add(AddDeckPanel, "addDeckPanel");

        EditDeckPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        editDeckSelect.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        editDeckSelect.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                editDeckSelectItemStateChanged(evt);
            }
        });
        EditDeckPanel.add(editDeckSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        jScrollPane5.setHorizontalScrollBar(null);

        editPromptTxtArea.setColumns(20);
        editPromptTxtArea.setLineWrap(true);
        editPromptTxtArea.setRows(7);
        editPromptTxtArea.setTabSize(4);
        editPromptTxtArea.setWrapStyleWord(true);
        editPromptTxtArea.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                editPromptTxtAreaFocusLost(evt);
            }
        });
        jScrollPane5.setViewportView(editPromptTxtArea);

        EditDeckPanel.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 79, 453, -1));

        jScrollPane6.setHorizontalScrollBar(null);

        editAnswerTxtArea.setColumns(20);
        editAnswerTxtArea.setLineWrap(true);
        editAnswerTxtArea.setRows(7);
        editAnswerTxtArea.setTabSize(4);
        editAnswerTxtArea.setWrapStyleWord(true);
        editAnswerTxtArea.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                editAnswerTxtAreaFocusLost(evt);
            }
        });
        jScrollPane6.setViewportView(editAnswerTxtArea);

        EditDeckPanel.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(112, 217, 451, -1));

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        editPreviousBtn.setText("Previous");
        editPreviousBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                editPreviousBtnActionPerformed(evt);
            }
        });
        jPanel2.add(editPreviousBtn);
        jPanel2.add(filler4);

        editNextBtn.setText("Next");
        editNextBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                editNextBtnActionPerformed(evt);
            }
        });
        jPanel2.add(editNextBtn);

        EditDeckPanel.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 45, 453, -1));

        jLabel1.setText("Flashcard Prompt: ");
        EditDeckPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 79, -1, -1));

        jLabel2.setText("Flashcard Answer: ");
        EditDeckPanel.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 217, -1, -1));

        cardPanel.add(EditDeckPanel, "editDeckPanel");

        RunDeckPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        deckSelect.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        deckSelect.addItemListener(new java.awt.event.ItemListener()
        {
            public void itemStateChanged(java.awt.event.ItemEvent evt)
            {
                deckSelectItemStateChanged(evt);
            }
        });
        RunDeckPanel.add(deckSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, -1, -1));

        jScrollPane3.setHorizontalScrollBar(null);

        runPromptTxtArea.setEditable(false);
        runPromptTxtArea.setColumns(20);
        runPromptTxtArea.setLineWrap(true);
        runPromptTxtArea.setRows(7);
        runPromptTxtArea.setTabSize(4);
        runPromptTxtArea.setWrapStyleWord(true);
        jScrollPane3.setViewportView(runPromptTxtArea);

        RunDeckPanel.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 61, 453, -1));

        jScrollPane4.setHorizontalScrollBar(null);

        runAnswerTxtArea.setEditable(false);
        runAnswerTxtArea.setColumns(20);
        runAnswerTxtArea.setLineWrap(true);
        runAnswerTxtArea.setRows(7);
        runAnswerTxtArea.setTabSize(4);
        runAnswerTxtArea.setWrapStyleWord(true);
        jScrollPane4.setViewportView(runAnswerTxtArea);

        RunDeckPanel.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(116, 238, 453, -1));

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        previousBtn.setText("Previous");
        previousBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                previousBtnActionPerformed(evt);
            }
        });
        jPanel1.add(previousBtn);
        jPanel1.add(filler1);

        shuffleBtn.setText("Shuffle deck");
        shuffleBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                shuffleBtnActionPerformed(evt);
            }
        });
        jPanel1.add(shuffleBtn);
        jPanel1.add(filler3);

        revealButton.setText("Reveal Answer");
        revealButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                revealButtonActionPerformed(evt);
            }
        });
        jPanel1.add(revealButton);
        jPanel1.add(filler2);

        nextBtn.setText("Next");
        nextBtn.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                nextBtnActionPerformed(evt);
            }
        });
        jPanel1.add(nextBtn);

        RunDeckPanel.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 204, 638, -1));

        cardPanel.add(RunDeckPanel, "runDeckPanel");

        getContentPane().add(cardPanel, java.awt.BorderLayout.CENTER);

        feedbackLbl.setFont(new java.awt.Font("Tempus Sans ITC", 0, 36)); // NOI18N
        feedbackLbl.setText("Welcome to your FlashCard Companion");
        getContentPane().add(feedbackLbl, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addFlashcardBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFlashcardBtnActionPerformed
        addNewFlashcard();
    }//GEN-LAST:event_addFlashcardBtnActionPerformed

    private void saveNewDeckBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveNewDeckBtnActionPerformed
        try{
			addNewFlashcard();
			controller.saveNewDeck(deckNameTxt.getText());
			setFeedbackText(deckNameTxt.getText() + " was successfully saved.");
			deckNameTxt.setText("");
		}
		catch (IllegalArgumentException e){
			setFeedbackText(e.getMessage());
		}
    }//GEN-LAST:event_saveNewDeckBtnActionPerformed

    private void deckSelectItemStateChanged(java.awt.event.ItemEvent evt)//GEN-FIRST:event_deckSelectItemStateChanged
    {//GEN-HEADEREND:event_deckSelectItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            deckCache = controller.deckSelectItemChanged(evt);
            runningIndex = 0;
            runAnswerTxtArea.setVisible(false);
            loadRunDeckCard();
        }
    }//GEN-LAST:event_deckSelectItemStateChanged

    private void previousBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_previousBtnActionPerformed
    {//GEN-HEADEREND:event_previousBtnActionPerformed
        runningIndex--;
        runAnswerTxtArea.setVisible(false);
        loadRunDeckCard();
    }//GEN-LAST:event_previousBtnActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_nextBtnActionPerformed
    {//GEN-HEADEREND:event_nextBtnActionPerformed
        runningIndex++;
        runAnswerTxtArea.setVisible(false);
        loadRunDeckCard();
    }//GEN-LAST:event_nextBtnActionPerformed

    private void revealButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_revealButtonActionPerformed
    {//GEN-HEADEREND:event_revealButtonActionPerformed
        runAnswerTxtArea.setVisible(true);
    }//GEN-LAST:event_revealButtonActionPerformed

    private void shuffleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shuffleBtnActionPerformed
        Collections.shuffle(deckCache.getDeck());
        runningIndex = 0;
        runAnswerTxtArea.setVisible(false);
        loadRunDeckCard();
    }//GEN-LAST:event_shuffleBtnActionPerformed

    private void editDeckSelectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_editDeckSelectItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED) {
            deckCache = controller.deckSelectItemChanged(evt);
            runningIndex = 0;
            runAnswerTxtArea.setVisible(false);
            loadEditDeckCard();
        }
    }//GEN-LAST:event_editDeckSelectItemStateChanged

    private void editPreviousBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPreviousBtnActionPerformed
        runningIndex--;
        loadEditDeckCard();
    }//GEN-LAST:event_editPreviousBtnActionPerformed

    private void editNextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editNextBtnActionPerformed
        runningIndex++;
        loadEditDeckCard();
    }//GEN-LAST:event_editNextBtnActionPerformed

    private void editPromptTxtAreaFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_editPromptTxtAreaFocusLost
    {//GEN-HEADEREND:event_editPromptTxtAreaFocusLost
        controller.editPromptFocusLost(deckCache, runningIndex, editPromptTxtArea.getText());
    }//GEN-LAST:event_editPromptTxtAreaFocusLost

    private void editAnswerTxtAreaFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_editAnswerTxtAreaFocusLost
    {//GEN-HEADEREND:event_editAnswerTxtAreaFocusLost
        controller.editAnswerFocusLost(deckCache, runningIndex, editAnswerTxtArea.getText());
    }//GEN-LAST:event_editAnswerTxtAreaFocusLost

    private void addNewFlashcard() {
        controller.addNewFlashcardButtonClicked(new FlashCard(flashcardPromptTxtArea.getText(), flashcardAnswerTxtArea.getText()));
        flashcardPromptTxtArea.setText("");
        flashcardAnswerTxtArea.setText("");
        flashcardPromptTxtArea.requestFocusInWindow();
    }
    
    private void loadRunDeckCard() {
		loadDeckCard(runPromptTxtArea, runAnswerTxtArea, previousBtn, nextBtn);
    }
	
	private void loadEditDeckCard() {
		loadDeckCard(editPromptTxtArea, editAnswerTxtArea, editPreviousBtn, editNextBtn);
	}
	
	private void loadDeckCard(JTextArea prompt, JTextArea answer, JButton prev, JButton next) {
		if (deckCache != null){
            prompt.setText(deckCache.getDeck().get(runningIndex).getPrompt());
            answer.setText(deckCache.getDeck().get(runningIndex).getAnswer());
            if (runningIndex == deckCache.getDeck().size() - 1){
                next.setEnabled(false);
            }
            else{
                next.setEnabled(true);
            }
            if (runningIndex == 0){
                prev.setEnabled(false);
            }
            else{
                prev.setEnabled(true);
            }
        }
        else{
            prompt.setText("");
            answer.setText("");
            prev.setEnabled(false);
            next.setEnabled(false);
        }
	}
	
	public void loadDeckSelect(JComboBox deckCombo){
		deckCombo.removeAllItems();
        deckCombo.addItem("Choose a deck...");
        for (String deck : controller.getDeckNames()) {
            deckCombo.addItem(deck);
        }
	}

    public void showNewDeckPanel() {
        switchCardPanel("addDeckPanel");
        setFeedbackText("");
    }

    public void showEditDeckPanel() {
        switchCardPanel("editDeckPanel");
		loadDeckSelect(editDeckSelect);
        setFeedbackText("Your changes are automatically being saved.");
    }

    public void showRunDeckPanel() {
        switchCardPanel("runDeckPanel");
        loadDeckSelect(deckSelect);
        setFeedbackText("");
    }

    private void switchCardPanel(String cardName) {
        cardLayout.show(cardPanel, cardName);
    }

    public void setFeedbackText(String text) {
        feedbackLbl.setText(text);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Flashcards.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Flashcards F = new Flashcards();
                F.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
                F.addWindowListener(F.persistOnClose);
                F.pack();
                F.setVisible(true);
            }
        });
    }

    private class PersistOnClose extends WindowAdapter {

        @Override
        public void windowClosing(WindowEvent e) {
            controller.persistBeforeClosing();
            System.exit(0);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddDeckPanel;
    private javax.swing.JPanel EditDeckPanel;
    private javax.swing.JPanel IntroPanel;
    private javax.swing.JPanel RunDeckPanel;
    private javax.swing.JButton addFlashcardBtn;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JTextField deckNameTxt;
    private javax.swing.JComboBox deckSelect;
    private javax.swing.JTextArea editAnswerTxtArea;
    private javax.swing.JComboBox editDeckSelect;
    private javax.swing.JButton editNextBtn;
    private javax.swing.JButton editPreviousBtn;
    private javax.swing.JTextArea editPromptTxtArea;
    private javax.swing.JLabel feedbackLbl;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.Box.Filler filler3;
    private javax.swing.Box.Filler filler4;
    private javax.swing.JTextArea flashcardAnswerTxtArea;
    private javax.swing.JTextArea flashcardPromptTxtArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JButton nextBtn;
    private javax.swing.JButton previousBtn;
    private javax.swing.JButton revealButton;
    private javax.swing.JTextArea runAnswerTxtArea;
    private javax.swing.JTextArea runPromptTxtArea;
    private javax.swing.JButton saveNewDeckBtn;
    private javax.swing.JButton shuffleBtn;
    // End of variables declaration//GEN-END:variables
}
